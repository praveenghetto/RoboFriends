{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Errorboundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","SearchChange","type","placeholder","onChange","Errorboundry","props","state","hasError","error","info","this","setstate","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCIvBC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACA,uBAAOA,UAAU,mCACjBU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCaHI,G,gEAlBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOvB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKL,MAAMO,a,GAhBKC,cCQZC,EATA,SAACT,GACZ,OACI,qBAAKU,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKb,EAAMO,YCiDJO,E,kDA9CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKnB,MAAQ,CACTX,OAAQ,GACR4B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAE3B,OAAQmC,S,oBAQ/C,WAAU,IAAD,EAEsBpB,KAAKJ,MAAzBX,EAFF,EAEEA,OAAO4B,EAFT,EAESA,YAERQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAKvC,EAAOyC,OAKJ,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcU,KAAKU,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQoC,WATpB,6C,GA7BAlB,aCKHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCEdO,IAASC,OAED,cAAC,EAAD,IAELC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.c27c2998.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-4'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox = ({SearchChange}) => {\r\n\r\n    return(\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder='search robots'\r\n        onChange={SearchChange} />\r\n        \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React, { Component } from 'react';\r\nimport { render } from \"@testing-library/react\";\r\n\r\nclass Errorboundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\ncomponentDidCatch(error, info){\r\n    this.setstate({ hasError: true })\r\n}\r\n\r\nrender() {\r\n    if (this.state.hasError) {\r\n        return <h1> opps that is not good </h1>\r\n    }\r\n    return this.props.children\r\n}\r\n}\r\nexport default Errorboundry;","import React from 'react';\r\n\r\nconst Scroll = (props)=> {\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist'\r\nimport Searchbox from '../components/Searchbox';\r\nimport './App.css'\r\nimport Errorboundry from '../components/Errorboundry';\r\nimport Scroll from '../components/Scroll.js';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {robots,searchfield}=this.state;\r\n\r\n        const filteredrobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n        })\r\n        if (!robots.length) {\r\n            return<h1>Loading</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <Searchbox SearchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                    <Errorboundry>\r\n                    <Cardlist robots={filteredrobots} />\r\n                    </Errorboundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n \n        <App />\n \n , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}